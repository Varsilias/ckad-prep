apiVersion: v1
kind: Secret
metadata:
  name: my-secret
data:
  ROOT_PASSWORD: cm9vdA==
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS ergo;

    USE ergo;

    CREATE TABLE todos (
        id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
        title VARCHAR(255) NOT NULL,
        completed BOOLEAN NOT NULL DEFAULT FALSE,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );
---

apiVersion: v1
kind: Service
metadata:
  name: mysql-normal
  labels:
    app: mysql
spec:
  ports:
  - name: 3306-3306
    port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: db
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-headless
  labels:
    app: db
spec:
  clusterIP: None
  ports:
  - name: tcp
    port: 3306
    protocol: TCP
  selector:
    app: db
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: db
  name: mysql
spec:
  replicas: 1
  serviceName: mysql-headless
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
      containers:
      - image: mysql:8.0
        name: mysql
        ports:
          - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: ROOT_PASSWORD
              name: my-secret
        - name: MYSQL_DATABASE
          value: ergo
        resources: {}
        volumeMounts:
          - name: mysql-initdb
            mountPath: /docker-entrypoint-initdb.d
